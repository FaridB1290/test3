/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  Vente as PrismaVente,
  PanierMystere as PrismaPanierMystere,
} from "@prisma/client";

export class VenteServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.VenteCountArgs, "select">): Promise<number> {
    return this.prisma.vente.count(args);
  }

  async ventes<T extends Prisma.VenteFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.VenteFindManyArgs>
  ): Promise<PrismaVente[]> {
    return this.prisma.vente.findMany<Prisma.VenteFindManyArgs>(args);
  }
  async vente<T extends Prisma.VenteFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.VenteFindUniqueArgs>
  ): Promise<PrismaVente | null> {
    return this.prisma.vente.findUnique(args);
  }
  async createVente<T extends Prisma.VenteCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.VenteCreateArgs>
  ): Promise<PrismaVente> {
    return this.prisma.vente.create<T>(args);
  }
  async updateVente<T extends Prisma.VenteUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.VenteUpdateArgs>
  ): Promise<PrismaVente> {
    return this.prisma.vente.update<T>(args);
  }
  async deleteVente<T extends Prisma.VenteDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.VenteDeleteArgs>
  ): Promise<PrismaVente> {
    return this.prisma.vente.delete(args);
  }

  async getPanierMystere(
    parentId: string
  ): Promise<PrismaPanierMystere | null> {
    return this.prisma.vente
      .findUnique({
        where: { id: parentId },
      })
      .panierMystere();
  }
}
